<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>高家祺的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://challange.github.io/"/>
  <updated>2019-05-05T08:15:10.444Z</updated>
  <id>https://challange.github.io/</id>
  
  <author>
    <name>高家祺</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringCloud——Gateway跨域配置</title>
    <link href="https://challange.github.io/springcloud-SpringCloud%E2%80%94%E2%80%94Gateway%E8%B7%A8%E5%9F%9F%E9%85%8D%E7%BD%AE/"/>
    <id>https://challange.github.io/springcloud-SpringCloud——Gateway跨域配置/</id>
    <published>2019-05-05T08:05:05.000Z</published>
    <updated>2019-05-05T08:15:10.444Z</updated>
    
    <content type="html"><![CDATA[<h3 id="正确配置方法"><a href="#正确配置方法" class="headerlink" title="正确配置方法"></a>正确配置方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置跨域</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> CorsWebFilter <span class="title">corsFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    CorsConfiguration config = <span class="keyword">new</span> CorsConfiguration();</span><br><span class="line">    <span class="comment">// cookie跨域</span></span><br><span class="line">    config.setAllowCredentials(Boolean.TRUE);</span><br><span class="line">    config.addAllowedMethod(<span class="string">"*"</span>);</span><br><span class="line">    config.addAllowedOrigin(<span class="string">"*"</span>);</span><br><span class="line">    config.addAllowedHeader(<span class="string">"*"</span>);</span><br><span class="line">    <span class="comment">// 配置前端js允许访问的自定义响应头</span></span><br><span class="line">    config.addExposedHeader(<span class="string">"setToken"</span>);</span><br><span class="line"></span><br><span class="line">    UrlBasedCorsConfigurationSource source = <span class="keyword">new</span> UrlBasedCorsConfigurationSource(<span class="keyword">new</span> PathPatternParser());</span><br><span class="line">    source.registerCorsConfiguration(<span class="string">"/**"</span>, config);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> CorsWebFilter(source);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置不生效方法"><a href="#配置不生效方法" class="headerlink" title="配置不生效方法"></a>配置不生效方法</h3><ul><li><a href="https://cloud.spring.io/spring-cloud-static/spring-cloud-gateway/2.1.0.RELEASE/single/spring-cloud-gateway.html#_cors_configuration">官方推荐配置</a></li><li>自定义实现GlobalFilter无效</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;正确配置方法&quot;&gt;&lt;a href=&quot;#正确配置方法&quot; class=&quot;headerlink&quot; title=&quot;正确配置方法&quot;&gt;&lt;/a&gt;正确配置方法&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
      
    
    </summary>
    
      <category term="SpringCloud" scheme="https://challange.github.io/categories/SpringCloud/"/>
    
    
      <category term="SpringCloud" scheme="https://challange.github.io/tags/SpringCloud/"/>
    
      <category term="Gateway" scheme="https://challange.github.io/tags/Gateway/"/>
    
  </entry>
  
  <entry>
    <title>SpringCloud——Gateway配置大全</title>
    <link href="https://challange.github.io/springcloud-SpringCloud%E2%80%94%E2%80%94Gateway%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%85%A8/"/>
    <id>https://challange.github.io/springcloud-SpringCloud——Gateway配置大全/</id>
    <published>2019-04-07T08:36:59.000Z</published>
    <updated>2019-04-07T08:44:25.545Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>了解Gateway的配置才可以理解使用Gateway可以做什么事情，才能更好地应用在产品开发中。</p></blockquote><h3 id="Predicates"><a href="#Predicates" class="headerlink" title="Predicates"></a>Predicates</h3><blockquote><p>Predicates主要起的作用是：配置路由匹配请求的规则</p></blockquote><h4 id="Http相关"><a href="#Http相关" class="headerlink" title="Http相关"></a>Http相关</h4><h5 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h5><blockquote><p>配置对于请求路径的匹配规则</p></blockquote><ol><li><p>yml配置，多个参数用逗号隔开</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">Path</span> <span class="string">=</span> <span class="string">/aa/**,/bb/**</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"Path"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"pattern"</span>:<span class="string">"/aa/**"</span>,<span class="attr">"pattern1"</span>:<span class="string">"/bb/**"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h5 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h5><blockquote><p>配置对Cookie中值的匹配，第一个为key，第二个为value。下例匹配cookie设置chocolate:ch.p的请求</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">Cookie</span> <span class="string">=</span> <span class="string">chocolate,ch.p</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"Cookie"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"chocolate"</span>,<span class="attr">"_genkey_1"</span>:<span class="string">"ch.p"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h5 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h5><blockquote><p>匹配Http请求中设置的内容，http-header设置X-Request-Id:\d+可以匹配，第二个参数第二个参数是正则表达式</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">Header</span> <span class="string">=</span> <span class="string">X-Request-Id,\d+</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"Header"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"X-Request-Id"</span>,<span class="attr">"_genkey_1"</span>:<span class="string">"\d+"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h5 id="Host"><a href="#Host" class="headerlink" title="Host"></a>Host</h5><blockquote><p>匹配Http请求Host，匹配所有host为**.somehost.com的请求</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">Host</span> <span class="string">=</span> <span class="string">**.somehost.com</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"Host"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"**.somehost.com"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h5 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h5><blockquote><p>匹配Http请求头</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">Method</span> <span class="string">=</span> <span class="string">GET</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"Method"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"GET"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h5 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h5><blockquote><p>匹配Http请求中的查询参数，请求中携带param1=value的请求可以匹配</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">Query</span> <span class="string">=</span> <span class="string">param1,value</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"Query"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"param1"</span>,<span class="attr">"_genkey_1"</span>:<span class="string">"value"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h5 id="RemoteAddr"><a href="#RemoteAddr" class="headerlink" title="RemoteAddr"></a>RemoteAddr</h5><blockquote><p>匹配请求中的RemoteAddr</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">RemoteAddr</span> <span class="string">=</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span><span class="string">/24</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"RemoteAddr"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"192.168.1.1/24"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="时间相关"><a href="#时间相关" class="headerlink" title="时间相关"></a>时间相关</h4><h5 id="After"><a href="#After" class="headerlink" title="After"></a>After</h5><blockquote><p>设置时间之后可以访问</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">After</span> <span class="string">=</span> <span class="number">2017</span><span class="bullet">-01</span><span class="bullet">-20</span><span class="attr">T17:42:47.789-07:00[America/Denver]</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"After"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"2017-01-20T17:42:47.789-07:00[America/Denver]"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h5 id="Before"><a href="#Before" class="headerlink" title="Before"></a>Before</h5><blockquote><p>设置时间之前可以访问</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">Before</span> <span class="string">=</span> <span class="number">2017</span><span class="bullet">-01</span><span class="bullet">-20</span><span class="attr">T17:42:47.789-07:00[America/Denver]</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"Before"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"2017-01-20T17:42:47.789-07:00[America/Denver]"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h5 id="Before-1"><a href="#Before-1" class="headerlink" title="Before"></a>Before</h5><blockquote><p>设置时间段内可以访问</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">Between</span> <span class="string">=</span> <span class="number">2017</span><span class="bullet">-01</span><span class="bullet">-20</span><span class="attr">T17:42:47.789-07:00[America/Denver],2017-01-21T17:42:47.789-07:00[America/Denver]</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"Between"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"2017-01-20T17:42:47.789-07:00[America/Denver]"</span>，<span class="string">"_genkey_1"</span>:<span class="string">"2017-01-21T17:42:47.789-07:00[America/Denver]"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="权重路由"><a href="#权重路由" class="headerlink" title="权重路由"></a>权重路由</h4><blockquote><p>至少两组以上路由可以配置权重路由，配置后会根据权重随机访问几个路由</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">Weight</span> <span class="string">=</span> <span class="string">service1,80</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"Weight"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"service1"</span>,<span class="attr">"_genkey_1"</span>:<span class="string">"80"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="Filters"><a href="#Filters" class="headerlink" title="Filters"></a>Filters</h3><h4 id="路径重写"><a href="#路径重写" class="headerlink" title="路径重写"></a>路径重写</h4><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">RewritePath</span> <span class="string">=</span> <span class="string">/path/(?&lt;segment&gt;.*),</span> <span class="string">/$\&#123;segment&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"RewritePath"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"/foo/(?&lt;segment&gt;.*)"</span>,<span class="attr">"_genkey_1"</span>:<span class="string">"/$\\&#123;segment&#125;"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="修改请求头"><a href="#修改请求头" class="headerlink" title="修改请求头"></a>修改请求头</h4><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">AddRequestHeader</span> <span class="string">=</span> <span class="string">X-Request-Foo,Bar</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"AddRequestHeader"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"X-Request-Foo"</span>,<span class="attr">"_genkey_1"</span>:<span class="string">"Bar"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="修改请求参数"><a href="#修改请求参数" class="headerlink" title="修改请求参数"></a>修改请求参数</h4><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">AddRequestParameter</span> <span class="string">=</span> <span class="string">foo,bar</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"AddRequestParameter"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"foo"</span>,<span class="attr">"_genkey_1"</span>:<span class="string">"bar"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="修改响应参数"><a href="#修改响应参数" class="headerlink" title="修改响应参数"></a>修改响应参数</h4><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">AddResponseHeader</span> <span class="string">=</span> <span class="string">X-Request-Foo,Bar</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"AddResponseHeader"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"X-Request-Foo"</span>,<span class="attr">"_genkey_1"</span>:<span class="string">"Bar"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="路径前缀增强"><a href="#路径前缀增强" class="headerlink" title="路径前缀增强"></a>路径前缀增强</h4><blockquote><p>请求路径/hello, 将会被替换为 /mypath/hello</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">PrefixPath</span> <span class="string">=</span> <span class="string">/mypath</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"PrefixPath"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"/mypath"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="路径前缀删除"><a href="#路径前缀删除" class="headerlink" title="路径前缀删除"></a>路径前缀删除</h4><blockquote><p>请求/name/bar/foo，去除掉前面两个前缀之后，最后转发到目标服务的路径为/foo</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">StripPrefix</span> <span class="string">=</span> <span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"StripPrefix"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"2"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="请求携带保留原始Host"><a href="#请求携带保留原始Host" class="headerlink" title="请求携带保留原始Host"></a>请求携带保留原始Host</h4><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">PreserveHostHeader</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"PreserveHostHeader"</span>,<span class="attr">"args"</span>:&#123;&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h4><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">RedirectTo</span> <span class="string">=</span> <span class="number">302</span><span class="string">,http://acme.org</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"RedirectTo"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"302"</span>,<span class="attr">"_genkey_1"</span>:<span class="string">"http://acme.org"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="断路器"><a href="#断路器" class="headerlink" title="断路器"></a>断路器</h4><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">Hystrix</span></span><br><span class="line"><span class="attr">  args:</span></span><br><span class="line">  <span class="comment"># 断路后跳转地址</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">fallbackcmd</span></span><br><span class="line"><span class="attr">      fallbackUri:</span> <span class="attr">forward:/incaseoffailureusethis</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"Hystrix"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"name"</span>:<span class="string">"fallbackcmd"</span>,<span class="attr">"fallbackUri"</span>:<span class="string">"forward:/incaseoffailureusethis"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="集成Redis原生支持请求限流"><a href="#集成Redis原生支持请求限流" class="headerlink" title="集成Redis原生支持请求限流"></a>集成Redis原生支持请求限流</h4><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">RequestRateLimiter</span></span><br><span class="line"><span class="attr">  args:</span></span><br><span class="line">    <span class="string">redis-rate-limiter.replenishRate:</span> <span class="number">10</span>  </span><br><span class="line">    <span class="string">redis-rate-limiter.burstCapacity:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"RequestRateLimiter"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"redis-rate-limiter.replenishRate"</span>:<span class="string">"10"</span>,<span class="attr">"redis-rate-limiter.burstCapacity"</span>:<span class="string">"20"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="删除请求头属性"><a href="#删除请求头属性" class="headerlink" title="删除请求头属性"></a>删除请求头属性</h4><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">RemoveRequestHeader</span> <span class="string">=</span> <span class="string">X-Request-Foo</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"RemoveRequestHeader"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"X-Request-Foo"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="删除响应头属性"><a href="#删除响应头属性" class="headerlink" title="删除响应头属性"></a>删除响应头属性</h4><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">RemoveResponseHeader</span> <span class="string">=</span> <span class="string">X-Request-Foo</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"RemoveResponseHeader"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"X-Request-Foo"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="重写响应头"><a href="#重写响应头" class="headerlink" title="重写响应头"></a>重写响应头</h4><blockquote><p>将请求 /42?user=ford&amp;password=omg!what&amp;flag=true, 改为 /42?user=ford&amp;password=***&amp;flag=true</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">RewriteResponseHeader</span> <span class="string">=</span> <span class="string">X-Response-Foo,password=[^&amp;]+,password=***</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"RewriteResponseHeader"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"X-Response-Foo"</span>,<span class="attr">"_genkey_1"</span>:<span class="string">"password=[^&amp;]+"</span>,<span class="attr">"_genkey_2"</span>:<span class="string">"password=***"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="重设请求路径"><a href="#重设请求路径" class="headerlink" title="重设请求路径"></a>重设请求路径</h4><blockquote><p>请求/foo/bar，在接下来的处理中被改为/bar</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">SetPath</span> <span class="string">=/&#123;segment&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"SetPath"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"/&#123;segment&#125;"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="设置响应头"><a href="#设置响应头" class="headerlink" title="设置响应头"></a>设置响应头</h4><blockquote><p>在接下来的处理中修改响应头X-Response-Foo为Bar</p></blockquote><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">SetResponseHeader</span> <span class="string">=X-Request-Foo,Bar</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"SetResponseHeader"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"X-Response-Foo"</span>,<span class="attr">"_genkey_1"</span>:<span class="string">"Bar"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="设置Http状态"><a href="#设置Http状态" class="headerlink" title="设置Http状态"></a>设置Http状态</h4><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">SetStatus</span></span><br><span class="line"><span class="attr">  args:</span></span><br><span class="line">  <span class="attr">status:</span> <span class="number">401</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"SetStatus"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"302"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="设置文件传输大小"><a href="#设置文件传输大小" class="headerlink" title="设置文件传输大小"></a>设置文件传输大小</h4><ol><li><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">RequestSize</span></span><br><span class="line"><span class="attr">  args:</span></span><br><span class="line"><span class="attr">   maxSize:</span> <span class="number">5000000</span></span><br></pre></td></tr></table></figure></li><li><p>json配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"RequestSize"</span>,<span class="attr">"args"</span>:&#123;<span class="attr">"_genkey_0"</span>:<span class="string">"5000000"</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="失败重试"><a href="#失败重试" class="headerlink" title="失败重试"></a>失败重试</h4><ol><li>yml配置<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">Retry</span></span><br><span class="line"><span class="attr">  args:</span></span><br><span class="line">  <span class="attr">retries:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">      statuses:</span> <span class="string">BAD_GATEWAY</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;了解Gateway的配置才可以理解使用Gateway可以做什么事情，才能更好地应用在产品开发中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Predicates&quot;&gt;&lt;a href=&quot;#Predicates&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="SpringCloud" scheme="https://challange.github.io/categories/SpringCloud/"/>
    
    
      <category term="SpringCloud" scheme="https://challange.github.io/tags/SpringCloud/"/>
    
      <category term="Gateway" scheme="https://challange.github.io/tags/Gateway/"/>
    
  </entry>
  
  <entry>
    <title>从零开始玩转SpringCloud（二）：Gateway网关对接注册中心</title>
    <link href="https://challange.github.io/springcloud-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%8E%A9%E8%BD%ACSpringCloud%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9AGateway%E7%BD%91%E5%85%B3%E5%AF%B9%E6%8E%A5%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/"/>
    <id>https://challange.github.io/springcloud-从零开始玩转SpringCloud（二）：Gateway网关对接注册中心/</id>
    <published>2019-04-07T06:54:30.000Z</published>
    <updated>2019-04-07T06:58:46.810Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>简介：Spring Cloud Gateway旨在为微服务架构提供一种简单而有效的统一的API路由管理方式。</p></blockquote><h3 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h3><ol><li>引入依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Eureka 客户端--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Gateway 路由--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：不要引入spring-boot-starter-web包，会导致Gateway启动抛出异常，错误如下。因为Spring Cloud Gateway 是使用 netty+webflux实现，webflux与web是冲突的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Consider defining a bean of type &apos;org.springframework.http.codec.ServerCodecConfigurer&apos; in your configuration.</span><br></pre></td></tr></table></figure></p></blockquote><ol start="2"><li><p>在Application中使用@EnableEurekaClient</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.gateway;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewayApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(GatewayApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置自动将注册中心的服务映射为路由</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8081</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">gateway</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    gateway:</span></span><br><span class="line">      <span class="comment"># 此处配置表示开启自动映射Eureka下发的路由</span></span><br><span class="line"><span class="attr">      discovery:</span></span><br><span class="line"><span class="attr">        locator:</span></span><br><span class="line"><span class="attr">          enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">          lowerCaseServiceId:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line">    <span class="comment"># Eureka Server地址</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8760/eureka/</span></span><br></pre></td></tr></table></figure></li><li><p>至此，已经可以直接通过gateway访问其他注册在Eureka中的服务的接口了。如客户端接口地址：<a href="http://localhost:8080/test，注册名称为client，则访问地址为http://localhost:8081/client/test。">http://localhost:8080/test，注册名称为client，则访问地址为http://localhost:8081/client/test。</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;简介：Spring Cloud Gateway旨在为微服务架构提供一种简单而有效的统一的API路由管理方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;项目搭建&quot;&gt;&lt;a href=&quot;#项目搭建&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="SpringCloud" scheme="https://challange.github.io/categories/SpringCloud/"/>
    
    
      <category term="SpringCloud" scheme="https://challange.github.io/tags/SpringCloud/"/>
    
      <category term="Gateway" scheme="https://challange.github.io/tags/Gateway/"/>
    
  </entry>
  
  <entry>
    <title>从零开始玩转SpringCloud（一）：Eureka注册中心</title>
    <link href="https://challange.github.io/springcloud-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%8E%A9%E8%BD%ACSpringCloud%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9AEureka%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/"/>
    <id>https://challange.github.io/springcloud-从零开始玩转SpringCloud（一）：Eureka注册中心/</id>
    <published>2019-04-07T06:50:20.000Z</published>
    <updated>2019-04-07T08:53:50.341Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Eureka"><a href="#Eureka" class="headerlink" title="Eureka"></a>Eureka</h3><hr><blockquote><p>介绍：Eureka，古希腊词语，含义为我找到了，我发现了！相传阿基米德发现福利原理时说出了这个词。</p></blockquote><p>Eureka是Spring Cloud Netflix微服务套件中的一部分，可以与Springboot构建的微服务很容易的整合起来。Eureka包含了服务器端和客户端组件。服务器端，也被称作是服务注册中心，用于提供服务的注册与发现。Eureka支持高可用的配置，当集群中有分片出现故障时，Eureka就会转入自动保护模式，它允许分片故障期间继续提供服务的发现和注册，当故障分片恢复正常时，集群中其他分片会把他们的状态再次同步回来。客户端组件包含服务消费者与服务生产者。在应用程序运行时，Eureka客户端向注册中心注册自身提供的服务并周期性的发送心跳来更新它的服务租约。同时也可以从服务端查询当前注册的服务信息并把他们缓存到本地并周期性的刷新服务状态。</p><h4 id="Eureka-Server服务搭建"><a href="#Eureka-Server服务搭建" class="headerlink" title="Eureka-Server服务搭建"></a>Eureka-Server服务搭建</h4><hr><ol><li>引入依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在Application中使用@EnableEurekaServer</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.eureka;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>配置文件</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">eureka-server</span> <span class="comment"># cAPP名称，在Eureka注册名称</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">peer</span> </span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">peer</span> <span class="comment"># 服务注册中心实例的主机名</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    register-with-eureka:</span> <span class="literal">false</span>  <span class="comment"># 是否注册自己</span></span><br><span class="line"><span class="attr">    fetch-registry:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br><span class="line"><span class="attr">  server:</span></span><br><span class="line"><span class="attr">    enableSelfPreservation:</span> <span class="literal">false</span> <span class="comment">#关闭自我保护机制</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line"><span class="attr">    com:</span></span><br><span class="line"><span class="attr">      netflix:</span></span><br><span class="line"><span class="attr">        eureka:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">        discovery:</span> <span class="string">info</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8760</span></span><br></pre></td></tr></table></figure><p>至此一个Eureka-Server就搭建好了。</p><h4 id="Eureka-Server服务高可用"><a href="#Eureka-Server服务高可用" class="headerlink" title="Eureka-Server服务高可用"></a>Eureka-Server服务高可用</h4><blockquote><p>说到高可用，就是要保证一个节点挂掉，不会影响整个系统的运行。解决办法就是多部署几个实例，搭建集群，那么一个实例节点挂掉，其他实例仍可提供服务。</p></blockquote><ol><li>新建三个配置文件application-peer1.yml、application-peer2.yml、application-peer3，</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">eureka-server</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">peer1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">peer1</span> <span class="comment">#服务注册中心实例的主机名</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span>     <span class="comment"># 另外几个注册中心地址</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8762/eureka,</span> <span class="attr">http://localhost:8763/eureka</span>  </span><br><span class="line"><span class="attr">    server:</span></span><br><span class="line"><span class="attr">      enableSelfPreservation:</span> <span class="literal">false</span> <span class="comment">#关闭自我保护</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line"><span class="attr">    com:</span></span><br><span class="line"><span class="attr">      netflix:</span></span><br><span class="line"><span class="attr">        eureka:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">        discovery:</span> <span class="string">info</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8761</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">eureka-server</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">peer2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">peer2</span> <span class="comment">#服务注册中心实例的主机名</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span>  <span class="comment"># 另外几个注册中心地址</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8761/eureka,</span> <span class="attr">http://localhost:8763/eureka</span></span><br><span class="line"><span class="attr">  server:</span></span><br><span class="line"><span class="attr">    enableSelfPreservation:</span> <span class="literal">false</span> <span class="comment">#关闭自我保护</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line"><span class="attr">    com:</span></span><br><span class="line"><span class="attr">      netflix:</span></span><br><span class="line"><span class="attr">        eureka:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">        discovery:</span> <span class="string">info</span></span><br><span class="line">        </span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8762</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">eureka-server</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">peer3</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">peer3</span> <span class="comment">#服务注册中心实例的主机名</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span>  <span class="comment"># 另外几个注册中心地址</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8761/eureka,</span> <span class="attr">http://localhost:8762/eureka</span></span><br><span class="line"><span class="attr">  server:</span></span><br><span class="line"><span class="attr">    enableSelfPreservation:</span> <span class="literal">false</span> <span class="comment">#关闭自我保护</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">  level:</span></span><br><span class="line"><span class="attr">    com:</span></span><br><span class="line"><span class="attr">      netflix:</span></span><br><span class="line"><span class="attr">        eureka:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">        discovery:</span> <span class="string">info</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8763</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>idea下按配置文件启动多个项目，Active profiles指定启动配置文件。分别启动刚刚写好的三个配置文件即可。<br><img src="/images/从零开始玩转SpringCloud（一）：Eureka注册中心/1.png" alt="在这里插入图片描述"></p></li><li><p>生产环境下是否需要动态配置注册中心，目前的配置对生产环境动态配置非常不友好</p></li></ol><h4 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h4><ol><li>引入Eureka Client依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在Application中使用@EnableEurekaServer</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.eureka;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaClientApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaClientApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>配置文件</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">gateway</span>  <span class="comment"># 在eureka-server注册名称</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8760/eureka/</span> </span><br><span class="line"><span class="comment">#      #高可用配置</span></span><br><span class="line"><span class="comment">#      defaultZone: http://localhost:8761/eureka/,http://localhost:8762/eureka/,http://localhost:8763/eureka/ </span></span><br><span class="line">      </span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8081</span></span><br></pre></td></tr></table></figure><ol start="4"><li>至此已EurekaClient已经搭建成功</li></ol><p><img src="/images/从零开始玩转SpringCloud（一）：Eureka注册中心/2.png" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Eureka&quot;&gt;&lt;a href=&quot;#Eureka&quot; class=&quot;headerlink&quot; title=&quot;Eureka&quot;&gt;&lt;/a&gt;Eureka&lt;/h3&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;介绍：Eureka，古希腊词语，含义为我找到了，我发现了！相传阿基米德发
      
    
    </summary>
    
      <category term="SpringCloud" scheme="https://challange.github.io/categories/SpringCloud/"/>
    
    
      <category term="SpringCloud" scheme="https://challange.github.io/tags/SpringCloud/"/>
    
      <category term="Eureka" scheme="https://challange.github.io/tags/Eureka/"/>
    
  </entry>
  
  <entry>
    <title>Scratch3.0——项目层次结构</title>
    <link href="https://challange.github.io/scratch-Scratch3-0%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/"/>
    <id>https://challange.github.io/scratch-Scratch3-0——项目层次结构/</id>
    <published>2019-04-06T08:46:31.000Z</published>
    <updated>2019-04-07T09:05:43.386Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>简要介绍: 本文旨在介绍scratch3.0项目层次结构及关键功能。<br>源码：<a href="https://github.com/LLK/scratch-gui">https://github.com/LLK/scratch-gui</a></p></blockquote><p><strong>核心依赖库</strong><br><img src="/images/Scratch3-0——项目层次结构/1.png" alt="Alt text"><br>scratch-audio：声音拓展<br>scratch-blocks：代码积木块<br>scratch-l10n：国际化<br>scratch-paint：绘图拓展<br>scratch-render：舞台渲染，在舞台区域出现的基于WebGL的处理器。<br>scratch-storage：作品存储加载<br>scratch-svg-renderer：svg处理<br>scratch-vm：虚拟机，管理状态并执行业务逻辑。</p><h4 id="Scratch-Gui目录结构"><a href="#Scratch-Gui目录结构" class="headerlink" title="Scratch-Gui目录结构"></a>Scratch-Gui目录结构</h4><p>在scratch中最为核心的便是gui库，目录结构如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">├── build                    # 默认编译后的文件夹</span><br><span class="line">│   ├── static               # 静态资源</span><br><span class="line">│   ├── index.html          </span><br><span class="line">│   ├── gui.js               </span><br><span class="line">│   ├── lib.js               # 编译后主要的js文件                    </span><br><span class="line">├── src</span><br><span class="line">│   ├── components           # UI组件，负责页面呈现</span><br><span class="line">│   ├── containers           # 容器组件，承载容器组件业务逻辑</span><br><span class="line">│   ├── css                  # 全局通用css</span><br><span class="line">│   ├── examples             # 集成测试用例</span><br><span class="line">│   ├── extensions       # 拓展案例</span><br><span class="line">│   ├── lib                  # 插件及高阶组件</span><br><span class="line">│   ├── audio            # 声音插件</span><br><span class="line">│   ├── backpack         # 背包插件</span><br><span class="line">│   ├── default-project  # 默认项目</span><br><span class="line">│   ├── libraries        # 素材库相关</span><br><span class="line">│   ├── video            # 视频模块</span><br><span class="line">│   ├── playground           # 编译后页面的模版</span><br><span class="line">│   ├── reducers             # 全局状态控制</span><br><span class="line">├── test                     # 测试用例</span><br><span class="line">├── translations             # 翻译库</span><br><span class="line">├── README.md</span><br><span class="line">└── package.json</span><br><span class="line">└── webpack.consig.js</span><br></pre></td></tr></table></figure></p><p>码猿Scratch学习平台：<a href="https://scratch.imayuan.com">https://scratch.imayuan.com</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;简要介绍: 本文旨在介绍scratch3.0项目层次结构及关键功能。&lt;br&gt;源码：&lt;a href=&quot;https://github.com/LLK/scratch-gui&quot;&gt;https://github.com/LLK/scratch-gui&lt;/a&gt;
      
    
    </summary>
    
      <category term="Scratch" scheme="https://challange.github.io/categories/Scratch/"/>
    
    
      <category term="Scratch" scheme="https://challange.github.io/tags/Scratch/"/>
    
  </entry>
  
  <entry>
    <title>Scratch3.0——作品截图</title>
    <link href="https://challange.github.io/scratch-Scratch3-0%E2%80%94%E2%80%94%E4%BD%9C%E5%93%81%E6%88%AA%E5%9B%BE/"/>
    <id>https://challange.github.io/scratch-Scratch3-0——作品截图/</id>
    <published>2019-04-06T08:46:31.000Z</published>
    <updated>2019-04-07T08:56:35.339Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Scratch 的舞台是基于canvas，最初尝试直接通过canvas的dom，然后生成图片，但最后只能得到一个黑色的图片，得到黑色图片的原因是没有取到有效的canvas而不是因为图片跨域，当初在这里走了很多弯路，继续研究舞台组件stage.jsx，从vm.renderer可以获取canvas，于是通过这个canvas对象生成图片，记得当时的效果是偶尔会得到有效图片，但是大部分时候依然是黑色的图片，原因稍后回解释。为了实现截图，当时又进一步研究了renderer的代码，最后找到了draw方法，通过多次尝试发现<strong>在draw方法的最后执行canvas对象生成图片可以获得舞台的有效图片</strong>。</p></blockquote><h4 id="最初的笨办法"><a href="#最初的笨办法" class="headerlink" title="最初的笨办法"></a>最初的笨办法</h4><p>在node_modules中找到scratch-render/src/RenderWebGL.js中的draw方法，也可以直接在dist中修改编译后的文件。顺便解释一下draw是对舞台进行了清理和重新绘制，而draw的频率非常频繁，因此不能直接通过canvas获取图片。在重绘后追加获取图片的toDataURL方法，考虑到需要在gui里面调用，此处采用了监听键盘事件来通信，接收到截图请求将舞台图片放在window.sessionStorage内存中，在需要使用的时候可以直接从sessionStorage获得。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">draw () &#123;</span><br><span class="line">       <span class="keyword">this</span>._doExitDrawRegion();</span><br><span class="line"><span class="comment">// 获取gl</span></span><br><span class="line">       <span class="keyword">const</span> gl = <span class="keyword">this</span>._gl;</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">       twgl.bindFramebufferInfo(gl, <span class="literal">null</span>);</span><br><span class="line">       gl.viewport(<span class="number">0</span>, <span class="number">0</span>, gl.canvas.width, gl.canvas.height);</span><br><span class="line">       gl.clearColor.apply(gl, <span class="keyword">this</span>._backgroundColor);</span><br><span class="line">       gl.clear(gl.COLOR_BUFFER_BIT);</span><br><span class="line"><span class="comment">// 重新绘制</span></span><br><span class="line">       <span class="keyword">this</span>._drawThese(<span class="keyword">this</span>._drawList, ShaderManager.DRAW_MODE.default, <span class="keyword">this</span>._projection);</span><br><span class="line">       <span class="comment">// 增加如下代码</span></span><br><span class="line">       <span class="keyword">let</span> img = <span class="keyword">new</span> Image();</span><br><span class="line">       img.src = gl.canvas.toDataURL(<span class="string">'image/png'</span>,<span class="number">0.7</span>)</span><br><span class="line">       <span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(e.keyCode == <span class="number">16</span>)&#123;</span><br><span class="line">               <span class="built_in">window</span>.sessionStorage.setItem(<span class="string">"coverImg"</span>,img.src)</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">'webGL'</span>)</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><h4 id="带来问题"><a href="#带来问题" class="headerlink" title="带来问题"></a>带来问题</h4><ol><li>直接修改node_modules依赖的内容，严重影响团队开发、项目部署，提升了项目维护的复杂度。</li><li>每次draw都会执行toDataURL方法，并且赋值，增大了系统开销。</li><li>通过事件映射，提升了项目的复杂度。</li></ol><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><p>回归最初问题的本源，不能直接从canvas.toDataURL获得舞台截图的原因是执行toDataURL的时候可能正好draw在重绘。因此先截图前先draw然后获取图片。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.renderer.draw();</span><br><span class="line"><span class="keyword">const</span> img = <span class="keyword">new</span> Image();</span><br><span class="line">img.src = <span class="keyword">this</span>.canvas.toDataURL(<span class="string">'image/png'</span>, <span class="number">0.7</span>);</span><br></pre></td></tr></table></figure></p><p>码猿Scratch学习平台：<a href="https://scratch.imayuan.com">https://scratch.imayuan.com</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Scratch 的舞台是基于canvas，最初尝试直接通过canvas的dom，然后生成图片，但最后只能得到一个黑色的图片，得到黑色图片的原因是没有取到有效的canvas而不是因为图片跨域，当初在这里走了很多弯路，继续研究舞台组件stage.jsx
      
    
    </summary>
    
      <category term="Scratch" scheme="https://challange.github.io/categories/Scratch/"/>
    
    
      <category term="Scratch" scheme="https://challange.github.io/tags/Scratch/"/>
    
  </entry>
  
  <entry>
    <title>Scratch3.0——克隆代码仓库的正确姿势</title>
    <link href="https://challange.github.io/scratch-Scratch3-0%E2%80%94%E2%80%94%E5%85%8B%E9%9A%86%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF/"/>
    <id>https://challange.github.io/scratch-Scratch3-0——克隆代码仓库的正确姿势/</id>
    <published>2019-04-06T08:46:31.000Z</published>
    <updated>2019-04-07T09:02:09.586Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>对Scratch3.0进行二次开发，首先要在github上fock<a href="https://github.com/LLK/scratch-gui.git">官方代码</a>，但是在自己开发的同时又要跟进官方的代码就要在git做如下配置。</p></blockquote><h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><p>1、配置上游项目地址。即将你 fork 的项目的地址给配置到自己的项目上。使用以下命令来配置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ git remote add upstream https://github.com/LLK/scratch-gui.git</span><br></pre></td></tr></table></figure></p><p>然后可以查看一下配置状况，很好，上游项目的地址已经被加进来了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜ git remote -v</span><br><span class="line">origin https://github.com/***/scratch-gui.git (fetch)</span><br><span class="line">origin  https://github.com/***/scratch-gui.git (push)</span><br><span class="line">upstream        https://github.com/LLK/scratch-gui.git (fetch)</span><br><span class="line">upstream        https://github.com/LLK/scratch-gui.git (push)</span><br></pre></td></tr></table></figure></p><p>2、获取上游(官方)项目更新。使用 fetch 命令更新，fetch 后会被存储在一个本地分支 upstream/master 上。如果长时间没有更新，可能会非常慢，一定要在网络环境好的情况下更新或从GitHub下载代码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ git fetch upstream</span><br></pre></td></tr></table></figure></p><p>3、合并到本地分支。切换到 master 分支，合并 upstream/master 分支。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ git merge upstream/master</span><br></pre></td></tr></table></figure></p><p>如果提示： fatal: refusing to merge unrelated histories，这是因为本地和远端已经是两个独立的版本库，git认为是不相干的版本库。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ git merge upstream/master --allow-unrelated-histories</span><br></pre></td></tr></table></figure></p><p>4、合并冲突。因为是在原先代码的基础上二次开发，冲突不可避免，而最费时间的也是这里解决冲突这一步。</p><p>5、提交推送。根据自己情况提交推送自己项目的代码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ git push origin master</span><br></pre></td></tr></table></figure></p><p>由于项目已经配置了上游项目的地址，所以如果 fork 的项目再次更新，重复步骤 2、3、4即可。</p><h4 id="留几个问题供大家思考交流："><a href="#留几个问题供大家思考交流：" class="headerlink" title="留几个问题供大家思考交流："></a>留几个问题供大家思考交流：</h4><ol><li>冲突在所难免，在开发中注意什么可以更快更高效的解决冲突合并代码？</li><li>如果官方代码重构了某部分模块，你的代码严重依赖该模块该如何处理？</li></ol><blockquote><p>如果需要修改开源系统，不要改动原系统，而是要开发辅助系统。（——从零开始学架构）</p></blockquote><p>码猿Scratch学习平台：<a href="https://scratch.imayuan.com">https://scratch.imayuan.com</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;对Scratch3.0进行二次开发，首先要在github上fock&lt;a href=&quot;https://github.com/LLK/scratch-gui.git&quot;&gt;官方代码&lt;/a&gt;，但是在自己开发的同时又要跟进官方的代码就要在git做如下配置。&lt;/
      
    
    </summary>
    
      <category term="Scratch" scheme="https://challange.github.io/categories/Scratch/"/>
    
    
      <category term="Scratch" scheme="https://challange.github.io/tags/Scratch/"/>
    
  </entry>
  
</feed>
